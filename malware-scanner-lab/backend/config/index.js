const path = require('path');

const config = {
  // Servidor
  port: process.env.PORT || 8080,
  nodeEnv: process.env.NODE_ENV || 'development',
  
  // ClamAV
  clamav: {
    host: process.env.CLAMAV_HOST || '127.0.0.1',
    port: Number(process.env.CLAMAV_PORT || 3310),
    timeout: Number(process.env.CLAMAV_TIMEOUT || 120000), // 2 minutos
  },
  
  // Archivos
  upload: {
    maxSize: Number(process.env.MAX_FILE_SIZE || 10 * 1024 * 1024), // 10MB
    allowedExtensions: (process.env.ALLOWED_EXTENSIONS || '.pdf,.doc,.docx,.txt,.zip').split(','),
    allowedMimeTypes: (process.env.ALLOWED_MIME_TYPES || 
      'application/pdf,text/plain,application/zip,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document'
    ).split(','),
    uploadDir: process.env.UPLOAD_DIR || path.resolve(process.cwd(), 'uploads'),
    cleanupInterval: Number(process.env.CLEANUP_INTERVAL || 24 * 60 * 60 * 1000), // 24 horas
    fileMaxAge: Number(process.env.FILE_MAX_AGE || 24 * 60 * 60 * 1000), // 24 horas
  },
  
  // Escaneos
  scan: {
    maxAge: Number(process.env.SCAN_MAX_AGE || 2 * 60 * 60 * 1000), // 2 horas
    cleanupInterval: Number(process.env.SCAN_CLEANUP_INTERVAL || 60 * 60 * 1000), // 1 hora
  },
  
  // Rate limiting
  rateLimit: {
    windowMs: Number(process.env.RATE_LIMIT_WINDOW || 60 * 1000), // 1 minuto
    general: Number(process.env.RATE_LIMIT_GENERAL || 100),
    upload: Number(process.env.RATE_LIMIT_UPLOAD || 10),
    scan: Number(process.env.RATE_LIMIT_SCAN || 20),
  },
  
  // CORS
  cors: {
    allowedOrigins: process.env.ALLOWED_ORIGINS ? process.env.ALLOWED_ORIGINS.split(',') : [],
  },
  
  // Logging
  logging: {
    level: process.env.LOG_LEVEL || 'info',
    format: process.env.NODE_ENV === 'production' ? 'combined' : 'dev',
  }
};

module.exports = config;

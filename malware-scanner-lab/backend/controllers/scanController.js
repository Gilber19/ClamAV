const { ScanService } = require('../services/scanService');
const { FileService } = require('../services/fileService');

class ScanController {
  static initiateScan = async (req, res) => {
    try {
      const { fileId } = req.params;
      
      // Verificar que el archivo existe
      const fileExists = await FileService.fileExists(fileId);
      if (!fileExists) {
        return res.status(404).json({ error: 'Archivo no encontrado' });
      }

      // Iniciar el escaneo asÃ­ncrono
      const scanId = await ScanService.startScan(fileId);
      
      res.json({ scanId });
    } catch (error) {
      console.error('[ScanController] Error:', error);
      res.status(500).json({ error: 'Error al iniciar el escaneo' });
    }
  };

  static getScanStatus = async (req, res) => {
    try {
      const { scanId } = req.params;
      
      const status = await ScanService.getScanStatus(scanId);
      
      if (!status) {
        return res.status(404).json({ error: 'Scan no encontrado' });
      }

      res.json({ status: status.status });
    } catch (error) {
      console.error('[ScanController] Status error:', error);
      res.status(500).json({ error: 'Error al consultar el estado' });
    }
  };

  static getScanResult = async (req, res) => {
    try {
      const { scanId } = req.params;
      
      const scanData = await ScanService.getScanResult(scanId);
      
      if (!scanData) {
        return res.status(404).json({ error: 'Scan no encontrado' });
      }

      if (scanData.status !== 'completed' && scanData.status !== 'error') {
        return res.status(409).json({ 
          error: 'Scan no completado', 
          status: scanData.status 
        });
      }

      res.json(scanData.result);
    } catch (error) {
      console.error('[ScanController] Result error:', error);
      res.status(500).json({ error: 'Error al obtener el resultado' });
    }
  };
}

module.exports = { ScanController };
